;; Analyzed by ClojureScript 1.7.170
{:use-macros {run! reagent.ratom}, :excludes #{}, :name app.middleware.schema, :imports nil, :requires {helpers mvsa.helpers, mvsa.helpers mvsa.helpers, s schema.core, schema.core schema.core}, :uses nil, :defs {add {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\middleware\\schema.cljs", :line 6, :column 7, :end-line 6, :end-column 10, :arglists (quote ([spec schema])), :doc "Middleware will validate the model on every change using the specified schema.\n  Throws an exception if validation fails."}, :name app.middleware.schema/add, :variadic false, :file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\middleware\\schema.cljs", :end-column 10, :method-params ([spec schema]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec schema])), :doc "Middleware will validate the model on every change using the specified schema.\n  Throws an exception if validation fails."}}, :require-macros {reagent.ratom reagent.ratom, s schema.core, schema.core schema.core}, :cljs.analyzer/constants {:seen #{:auto-run :on-start}, :order [:on-start :auto-run]}, :doc nil}
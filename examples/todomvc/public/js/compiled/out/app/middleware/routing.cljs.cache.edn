;; Analyzed by ClojureScript 1.7.170
{:use-macros {reaction reagent.ratom, match cljs.core.match, run! reagent.ratom}, :excludes #{}, :name app.middleware.routing, :imports {Html5History goog.history.Html5History}, :requires {helpers mvsa.helpers, mvsa.helpers mvsa.helpers, cljs.core.match cljs.core.match, goog.events goog.events, EventType goog.history.EventType, goog.history.EventType goog.history.EventType, Html5History goog.history.Html5History}, :uses nil, :defs {-wrap-reconcile {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\middleware\\routing.cljs", :line 64, :column 7, :end-line 64, :end-column 22, :arglists (quote ([app-reconcile])), :doc "Updates the token."}, :name app.middleware.routing/-wrap-reconcile, :variadic false, :file "src\\app\\middleware\\routing.cljs", :end-column 22, :method-params ([app-reconcile]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([app-reconcile])), :doc "Updates the token."}, add {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\middleware\\routing.cljs", :line 77, :column 7, :end-line 77, :end-column 10, :arglists (quote ([spec history])), :doc "Routing middleware which allows app react to navigation events by observing model changes.\n\n  After start it begins catching navigation events and updates ::token in model accordingly.\n  If ::token changes in model (e.g. by toggling action in debugger), then current url is updated using new token.\n  App can set initial ::token in its initial-model."}, :name app.middleware.routing/add, :variadic false, :file "src\\app\\middleware\\routing.cljs", :end-column 10, :method-params ([spec history]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec history])), :doc "Routing middleware which allows app react to navigation events by observing model changes.\n\n  After start it begins catching navigation events and updates ::token in model accordingly.\n  If ::token changes in model (e.g. by toggling action in debugger), then current url is updated using new token.\n  App can set initial ::token in its initial-model."}, replace-token {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\middleware\\routing.cljs", :line 13, :column 4, :end-line 13, :end-column 17, :protocol app.middleware.routing/HistoryProtocol, :doc "Replace token without firing navigation event.", :arglists (quote ([this token]))}, :protocol app.middleware.routing/HistoryProtocol, :name app.middleware.routing/replace-token, :variadic false, :file "src\\app\\middleware\\routing.cljs", :end-column 17, :method-params ([this token]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this token])), :doc "Replace token without firing navigation event."}, -wrap-control {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\middleware\\routing.cljs", :line 51, :column 7, :end-line 51, :end-column 20, :arglists (quote ([app-control])), :doc "Updates token in model on navigation signal and lets wrapped app handle the signal."}, :name app.middleware.routing/-wrap-control, :variadic false, :file "src\\app\\middleware\\routing.cljs", :end-column 20, :method-params ([app-control]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([app-control])), :doc "Updates token in model on navigation signal and lets wrapped app handle the signal."}, new-history {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\middleware\\routing.cljs", :line 38, :column 7, :end-line 38, :end-column 18, :arglists (quote ([]))}, :name app.middleware.routing/new-history, :variadic false, :file "src\\app\\middleware\\routing.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ->History {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\middleware\\routing.cljs", :line 17, :column 12, :end-line 17, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([-goog-history]))}, :name app.middleware.routing/->History, :variadic false, :file "src\\app\\middleware\\routing.cljs", :end-column 19, :method-params ([-goog-history]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([-goog-history]))}, *_history-events-enabled?* {:name app.middleware.routing/*_history-events-enabled?*, :file "src\\app\\middleware\\routing.cljs", :line 15, :column 1, :end-line 15, :end-column 42, :dynamic true, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\middleware\\routing.cljs", :line 15, :column 16, :end-line 15, :end-column 42, :dynamic true}}, History {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable app.middleware.routing/HistoryProtocol cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name app.middleware.routing/History, :file "src\\app\\middleware\\routing.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 17, :record true, :end-line 17, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, HistoryProtocol {:meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\middleware\\routing.cljs", :line 10, :column 14, :end-line 10, :end-column 29, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {listen [[this callback]], token [[this]], replace-token [[this token]]}}}, :protocol-symbol true, :name app.middleware.routing/HistoryProtocol, :file "src\\app\\middleware\\routing.cljs", :end-column 29, :column 1, :line 10, :protocol-info {:methods {listen [[this callback]], token [[this]], replace-token [[this token]]}}, :info nil, :end-line 10, :impls #{app.middleware.routing/History}, :doc nil, :jsdoc ("@interface")}, map->History {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\middleware\\routing.cljs", :line 17, :column 12, :end-line 17, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__26948]))}, :name app.middleware.routing/map->History, :variadic false, :file "src\\app\\middleware\\routing.cljs", :end-column 19, :method-params ([G__26948]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__26948]))}, token {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\middleware\\routing.cljs", :line 12, :column 4, :end-line 12, :end-column 9, :protocol app.middleware.routing/HistoryProtocol, :doc "Return current token.", :arglists (quote ([this]))}, :protocol app.middleware.routing/HistoryProtocol, :name app.middleware.routing/token, :variadic false, :file "src\\app\\middleware\\routing.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return current token."}, -wrap-initial-model {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\middleware\\routing.cljs", :line 45, :column 7, :end-line 45, :end-column 26, :arglists (quote ([app-initial-model])), :doc "Sets ::token to empty string if app didn't already set it."}, :name app.middleware.routing/-wrap-initial-model, :variadic false, :file "src\\app\\middleware\\routing.cljs", :end-column 26, :method-params ([app-initial-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([app-initial-model])), :doc "Sets ::token to empty string if app didn't already set it."}, listen {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\middleware\\routing.cljs", :line 11, :column 4, :end-line 11, :end-column 10, :protocol app.middleware.routing/HistoryProtocol, :doc "Starts calling back on navigation events, fires the initial callback. Returns a function which stops listening.", :arglists (quote ([this callback]))}, :protocol app.middleware.routing/HistoryProtocol, :name app.middleware.routing/listen, :variadic false, :file "src\\app\\middleware\\routing.cljs", :end-column 10, :method-params ([this callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this callback])), :doc "Starts calling back on navigation events, fires the initial callback. Returns a function which stops listening."}}, :require-macros {reagent.ratom reagent.ratom, cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{-goog-history :else :initial-model :app.middleware.routing/-set-token :app.middleware.routing/-on-navigate :on-stop :control :auto-run :-goog-history :app.middleware.routing/token :reconcile :on-start}, :order [:-goog-history -goog-history :app.middleware.routing/token :else :app.middleware.routing/-on-navigate :app.middleware.routing/-set-token :initial-model :control :reconcile :on-start :auto-run :on-stop]}, :doc nil}
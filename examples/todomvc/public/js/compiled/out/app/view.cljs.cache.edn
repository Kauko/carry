;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name app.view, :imports nil, :requires {r reagent.core, reagent.core reagent.core}, :uses nil, :defs {-header {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :line 4, :column 7, :end-line 4, :end-column 14, :arglists (quote ([field dispatch]))}, :name app.view/-header, :variadic false, :file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :end-column 14, :method-params ([field dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([field dispatch]))}, -enter-key? {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :line 13, :column 7, :end-line 13, :end-column 18, :arglists (quote ([e]))}, :name app.view/-enter-key?, :variadic false, :file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :end-column 18, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, -escape-key? {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :line 14, :column 7, :end-line 14, :end-column 19, :arglists (quote ([e]))}, :name app.view/-escape-key?, :variadic false, :file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :end-column 19, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, -todo-input {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :line 16, :column 7, :end-line 16, :end-column 18, :arglists (quote ([_id _title _editing? _dispatch])), :doc "Note that |editing?| is passed only to trigger :component-did-update to set focus on the state change."}, :name app.view/-todo-input, :variadic false, :file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :end-column 18, :method-params ([_id _title _editing? _dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_id _title _editing? _dispatch])), :doc "Note that |editing?| is passed only to trigger :component-did-update to set focus on the state change."}, -todo {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :line 39, :column 7, :end-line 39, :end-column 12, :arglists (quote ([{:keys [id title editing? completed?], :as _todo} dispatch]))}, :name app.view/-todo, :variadic false, :file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :end-column 12, :method-params ([p__34647 dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [id title editing? completed?], :as _todo} dispatch]))}, -todo-list {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :line 51, :column 7, :end-line 51, :end-column 17, :arglists (quote ([todos all-completed? dispatch]))}, :name app.view/-todo-list, :variadic false, :file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :end-column 17, :method-params ([todos all-completed? dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 3, :fn-var true, :arglists (quote ([todos all-completed? dispatch]))}, -footer {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :line 63, :column 7, :end-line 63, :end-column 14, :arglists (quote ([active-count has-completed-todos? visibility visibility-spec dispatch]))}, :name app.view/-footer, :variadic false, :file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :end-column 14, :method-params ([active-count has-completed-todos? visibility visibility-spec dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 5, :fn-var true, :arglists (quote ([active-count has-completed-todos? visibility visibility-spec dispatch]))}, view {:protocol-inline nil, :meta {:file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :line 80, :column 7, :end-line 80, :end-column 11, :arglists (quote ([{:keys [field has-todos? todos all-completed? active-count has-completed-todos? visibility visibility-spec], :as _view-model} dispatch]))}, :name app.view/view, :variadic false, :file "C:\\Users\\Yuri\\Dropbox\\dev\\reagent-mvsa\\examples\\todomvc\\src\\app\\view.cljs", :end-column 11, :method-params ([p__34686 dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [field has-todos? todos all-completed? active-count has-completed-todos? visibility visibility-spec], :as _view-model} dispatch]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:all-completed? :editing? :button.clear-completed :header.header :completed? :section.todoapp :todos :section.main :key :placeholder :strong :li :input.edit :value :component-did-mount :input.toggle :on-toggle :span.todo-count :on-blur :component-did-update :field :type :input.new-todo :ul.filters :on-click :title :div.view :div :on-stop-editing :has-todos? :on-start-editing :input.toggle-all :has-completed-todos? :for :on-update-todo :on-update-field :reagent-render :on-double-click :label :id :class :checked :on-add :on-toggle-all :button.destroy :on-cancel-editing :h1 :on-change :on-key-down :on-clear-completed :ul.todo-list :active-count :footer.footer :on-remove :visibility :visibility-spec :href :a}, :order [:header.header :h1 :input.new-todo :placeholder :value :on-change :on-key-down :on-update-field :on-add :reagent-render :component-did-update :component-did-mount :input.edit :on-blur :on-update-todo :on-stop-editing :on-cancel-editing :id :title :editing? :completed? :li :class :div.view :input.toggle :type :checked :on-toggle :label :on-double-click :on-start-editing :button.destroy :on-click :on-remove :section.main :input.toggle-all :on-toggle-all :for :ul.todo-list :key :footer.footer :span.todo-count :strong :ul.filters :href :a :button.clear-completed :on-clear-completed :field :has-todos? :todos :all-completed? :active-count :has-completed-todos? :visibility :visibility-spec :section.todoapp :div]}, :doc nil}
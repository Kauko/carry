;; Analyzed by ClojureScript 1.7.228
{:use-macros {match cljs.core.match}, :excludes #{}, :name friend-list.core, :imports nil, :requires {goog.functions goog.functions, schema.core schema.core, schema middleware.schema, reagent.core reagent.core, r reagent.core, middleware.schema middleware.schema, mvsa reagent-mvsa.core, reagent-mvsa.core reagent-mvsa.core, s schema.core, h middleware.history, cljs.core.match cljs.core.match, middleware.history middleware.history}, :uses {debounce goog.functions}, :defs {Schema {:name friend-list.core/Schema, :file "src-spec/friend_list/core.cljs", :line 12, :column 1, :end-line 12, :end-column 12, :meta {:file "/Users/yuri/Dropbox/dev/reagent-mvsa/examples/friend-list/src-spec/friend_list/core.cljs", :line 12, :column 6, :end-line 12, :end-column 12}}, -initial-model {:name friend-list.core/-initial-model, :file "src-spec/friend_list/core.cljs", :line 21, :column 1, :end-line 21, :end-column 20, :meta {:file "/Users/yuri/Dropbox/dev/reagent-mvsa/examples/friend-list/src-spec/friend_list/core.cljs", :line 21, :column 6, :end-line 21, :end-column 20}}, -new-control {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/reagent-mvsa/examples/friend-list/src-spec/friend_list/core.cljs", :line 26, :column 7, :end-line 26, :end-column 19, :arglists (quote ([history api-search]))}, :name friend-list.core/-new-control, :variadic false, :file "src-spec/friend_list/core.cljs", :end-column 19, :method-params ([history api-search]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([history api-search]))}, -reconcile {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/reagent-mvsa/examples/friend-list/src-spec/friend_list/core.cljs", :line 56, :column 7, :end-line 56, :end-column 17, :arglists (quote ([model action]))}, :name friend-list.core/-reconcile, :variadic false, :file "src-spec/friend_list/core.cljs", :end-column 17, :method-params ([model action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model action]))}, view-model {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/reagent-mvsa/examples/friend-list/src-spec/friend_list/core.cljs", :line 66, :column 7, :end-line 66, :end-column 17, :arglists (quote ([model]))}, :name friend-list.core/view-model, :variadic false, :file "src-spec/friend_list/core.cljs", :end-column 17, :method-params ([model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([model]))}, -search-field {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/reagent-mvsa/examples/friend-list/src-spec/friend_list/core.cljs", :line 71, :column 7, :end-line 71, :end-column 20, :arglists (quote ([_query _dispatch]))}, :name friend-list.core/-search-field, :variadic false, :file "src-spec/friend_list/core.cljs", :end-column 20, :method-params ([_query _dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_query _dispatch]))}, -friend-list {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/reagent-mvsa/examples/friend-list/src-spec/friend_list/core.cljs", :line 86, :column 7, :end-line 86, :end-column 19, :arglists (quote ([friends]))}, :name friend-list.core/-friend-list, :variadic false, :file "src-spec/friend_list/core.cljs", :end-column 19, :method-params ([friends]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([friends]))}, view {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/reagent-mvsa/examples/friend-list/src-spec/friend_list/core.cljs", :line 95, :column 7, :end-line 95, :end-column 11, :arglists (quote ([{:keys [query friends], :as _view-model} dispatch]))}, :name friend-list.core/view, :variadic false, :file "src-spec/friend_list/core.cljs", :end-column 11, :method-params ([p__92373 dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [query friends], :as _view-model} dispatch]))}, new-spec {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/reagent-mvsa/examples/friend-list/src-spec/friend_list/core.cljs", :line 102, :column 7, :end-line 102, :end-column 15, :arglists (quote ([history api-search]))}, :name friend-list.core/new-spec, :variadic false, :file "src-spec/friend_list/core.cljs", :end-column 15, :method-params ([history api-search]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists (quote ([history api-search]))}}, :require-macros {s schema.core, schema.core schema.core, r reagent.core, reagent.core reagent.core, cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{:ul :key :placeholder :else :font-size :initial-model :strong :name :li :value :list-style-type :component-did-mount :username :component-did-update :type :middleware.history/on-enter :style :div :friends :reagent-render :padding-left :on-stop :id :control :set-friends :set-query :input :reconcile :on-input :query :on-change :on-search-success :on-start}, :order [:query :friends :id :name :username :on-search-success :else :set-friends :middleware.history/on-enter :set-query :on-input :on-stop :on-start :reagent-render :component-did-update :component-did-mount :input :type :placeholder :value :on-change :ul :style :list-style-type :padding-left :li :font-size :strong :key :div :initial-model :control :reconcile]}, :doc nil}